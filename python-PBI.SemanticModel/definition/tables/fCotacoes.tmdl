table fCotacoes
	lineageTag: e5a83ff7-2b13-4589-afe2-15491c1b4ecd

	column Date
		dataType: dateTime
		formatString: yyyy-mm-dd hh:nn:ss
		lineageTag: c054ba7e-9271-4aac-9eb1-43db98504933
		summarizeBy: none
		sourceColumn: Date

		changedProperty = DataType

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isDateTimeCustom":true}

	column Open
		dataType: decimal
		formatString: "R$"\ #,0.00;-"R$"\ #,0.00;"R$"\ #,0.00
		lineageTag: 69e35bb7-6476-47a7-a055-6c4bb3ee69b2
		summarizeBy: sum
		sourceColumn: Open

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	column High
		dataType: decimal
		formatString: "R$"\ #,0.00;-"R$"\ #,0.00;"R$"\ #,0.00
		lineageTag: fb237714-6b51-4fa3-8773-427377367a57
		summarizeBy: sum
		sourceColumn: High

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	column Low
		dataType: decimal
		formatString: "R$"\ #,0.00;-"R$"\ #,0.00;"R$"\ #,0.00
		lineageTag: 199a7c20-94ea-401b-9982-4e95d316f773
		summarizeBy: sum
		sourceColumn: Low

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	column Close
		dataType: decimal
		formatString: "R$"\ #,0.00;-"R$"\ #,0.00;"R$"\ #,0.00
		lineageTag: 4137177a-fd78-41fa-b961-c45416bdb248
		summarizeBy: sum
		sourceColumn: Close

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	column Ativo
		dataType: string
		lineageTag: 600e9f04-f9f5-4959-b4ed-9496828087fb
		summarizeBy: none
		sourceColumn: Ativo

		annotation SummarizationSetBy = Automatic

	partition fCotacoes = m
		mode: import
		source =
				let
				    Source = Python.Execute("# Código completo da obtenção dos dados históricos das cotações da carteira de 01/08/2022 à 01/08/2023#(lf)# Importando a biblioteca#(lf)import yfinance as yf#(lf)#(lf)# Definindo a carteira de ações#(lf)carteira_yf = ['ABEV3.SA', 'B3SA3.SA', 'ELET3.SA', 'GGBR4.SA', 'ITSA4.SA',#(lf)               'PETR4.SA', 'RENT3.SA', 'SUZB3.SA', 'VALE3.SA', 'WEGE3.SA']#(lf)#(lf)# Carregando os dados da carteira#(lf)df = yf.download(carteira_yf, start=""2022-08-01"", end=""2023-08-01"")#(lf)#(lf)# Passando os ativos para o multindex do df#(lf)cotacoes = df.stack(level=1)#(lf)#(lf)# Resetando os índices e renomenado a coluna dos ativos#(lf)cotacoes = cotacoes.reset_index().rename(columns={'level_1': 'Ativo'})#(lf)#(lf)# Organizando o df#(lf)cotacoes = cotacoes[[""Date"", ""Open"", ""High"", ""Low"", ""Close"", ""Ativo""]]#(lf)#(lf)del carteira_yf, df"),
				    cotacoes1 = Source{[Name="cotacoes"]}[Value],
				    #"Run Python script" = Python.Execute("# 'dataset' tem os dados de entrada para este script#(lf)import pandas as pd#(lf)#(lf)dataset[""Ativo""] = dataset[""Ativo""].apply(lambda x: x[:-3])",[dataset=cotacoes1]),
				    dataset = #"Run Python script"{[Name="dataset"]}[Value],
				    #"Changed Type" = Table.TransformColumnTypes(dataset,{{"Date", type datetime}}),
				    #"Changed Type1" = Table.TransformColumnTypes(#"Changed Type",{{"Date", type date}}),
				    #"Changed Type with Locale" = Table.TransformColumnTypes(#"Changed Type1", {{"Open", Currency.Type}, {"High", Currency.Type}, {"Low", Currency.Type}, {"Close", Currency.Type}}, "en-US")
				in
				    #"Changed Type with Locale"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

